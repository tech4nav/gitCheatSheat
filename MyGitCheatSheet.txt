
git --version

Configure Git
git config --global user.name "w3schools-test"
git config --global user.email "test@w3schools.com"

git config --list   will list the settings.

git init
git status
git status --short   (to show status in compact way)

Staged files are files that are ready to be committed to the repository
git add index.html  to stage the files
git rm --cached index.html to unstage

git add --all  or (git add -A) stage all files

git commit -m "First release of Hello World!"  (The commit command performs a commit, and the -m "message" adds a message.)

Note: Short status flags are:
?? - Untracked files
A - Files added to stage
M - Modified files
D - Deleted files

Git Commit without Stage (The -a option will automatically stage every changed, already tracked file)
git commit -a -m "Updated index.html with a new line"
git log    (to view Git Commit Log history)

Git Help
git command -help
git help --all

create New Git Branch
git branch newBranchName
git branch      (List all local branches)
git branch -a     (List all branches local + remote)

git checkout newBranchName   (check out a branch (local or remote). Moving us from the current branch, to the one specified at the end of the command)

git checkout -b emergency-fix      (created a new branch from master, and switch to it)


Merge Branches
git merge emergency-fix    (merge the current branch (master) with emergency-fix)

git branch -d emergency-fix      (delete emergency-fix branch)

Add remote github repo to local repo
git remote add origin https://github.com/tech4nav/gitCheatSheat.git

 git push --set-upstream origin master
 
 
 
 Git Pull from GitHub  
 pull is a combination of 2 different commands: fetch  and merge
 
 git fetch origin        (Git Fetch  fetch gets all the change history of a tracked branch/repo.)
 git log origin/master
 git diff origin/master
 git merge origin/master
 
 git pull origin    ==  git fetch origin  + git merge origin/master
 git pull             pull whole repository with all branches
 Push Changes to GitHub
 git commit -a -m "Updated index.html. Resized image"  (commit change direct to master)
 git push origin
 
 Push a Branch to GitHub
 git checkout -b update-readme    (then add some file and commit)
 git push origin update-readme
 
 Git Revert HEAD
 revert is the command we use when we want to take a previous commit and add it as a new commit, keeping the log intact.
We revert the latest commit using git revert HEAD (revert the latest change,  and then commit), adding the option --no-edit to skip the commit message editor (getting the default revert message):
git revert HEAD --no-edit
To revert to earlier commits, use git revert HEAD~x (x being a number. 1 going back one more, 2 going back two more, etc.)

Git Reset
reset is the command we use when we want to move the repository back to a previous commit, discarding any changes made after that commit


git log --oneline
e56ba1f (HEAD -> master) Revert "Just a regular update, definitely no accidents here..."
52418f7 Just a regular update, definitely no accidents here...
9a9add8 (origin/master) Added .gitignore
81912ba Corrected spelling error
3fdaa5b Merge pull request #1 from w3schools-test/update-readme
836e5bf (origin/update-readme, update-readme) Updated readme for GitHub Branches
daf4f7c (origin/html-skeleton, html-skeleton) Updated index.html with basic meta
facaeae (gh-page/master) Merge branch 'master' of https://github.com/w3schools-test/hello-world
e7de78f Updated index.html. Resized image
5a04b6f Updated README.md with a line about focus
d29d69f Updated README.md with a line about GitHub
e0b6038 merged with hello-world-images after fixing conflicts
1f1584e added new image
dfa79db updated index.html with emergency fix
0312c55 Added image to Hello World
09f4acd Updated index.html with a new line
221ec6e First release of Hello World!

We want to return to the commit: 9a9add8 (origin/master) Added .gitignore, the last one before we started to mess with things.

Git Reset
We reset our repository back to the specific commit using git reset commithash (commithash being the first 7 characters of the commit hash we found in the log):

git reset 9a9add8

git log --oneline
9a9add8 (HEAD -> master, origin/master) Added .gitignore
81912ba Corrected spelling error
3fdaa5b Merge pull request #1 from w3schools-test/update-readme
836e5bf (origin/update-readme, update-readme) Updated readme for GitHub Branches
daf4f7c (origin/html-skeleton, html-skeleton) Updated index.html with basic meta
facaeae (gh-page/master) Merge branch 'master' of https://github.com/w3schools-test/hello-world
e7de78f Updated index.html. Resized image
5a04b6f Updated README.md with a line about focus
d29d69f Updated README.md with a line about GitHub
e0b6038 merged with hello-world-images after fixing conflicts
1f1584e added new image
dfa79db updated index.html with emergency fix
0312c55 Added image to Hello World
09f4acd Updated index.html with a new line
221ec6e First release of Hello World!

 
 
 Git commit --amend
commit --amend is used to modify the most recent commit.

It combines changes in the staging environment with the latest commit, and creates a new commit.

This new commit replaces the latest commit entirely.

git commit -m "Adding plines to reddme"

git log --oneline
07c5bc5 (HEAD -> master) Adding plines to reddme

git commit --amend -m "Added lines to README.md"
git log --oneline
eaa69ce (HEAD -> master) Added lines to README.md
 



